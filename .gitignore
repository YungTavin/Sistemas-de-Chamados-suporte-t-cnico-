from collections import deque

class Chamado:
    def __init__(self, id, descricao, prioridade):
        self.id = id
        self.descricao = descricao
        self.prioridade = prioridade
        self.finalizado = False

    def __repr__(self):
        status = "Finalizado" if self.finalizado else "Aberto"
        return f"ID: {self.id} | {self.descricao} | Prioridade: {self.prioridade} | Status: {status}"

class SistemaChamados:
    def __init__(self):
        self.chamados = []
        self.historico = deque()

    def cadastrar_chamado(self, id, descricao, prioridade):
        chamado = Chamado(id, descricao, prioridade)
        self.chamados.append(chamado)
        self.historico.append(list(self.chamados))

    def buscar_chamado(self, termo):
        return [chamado for chamado in self.chamados if str(chamado.id) == str(termo) or termo.lower() in chamado.descricao.lower()]

    def remover_finalizados(self):
        self.chamados = [chamado for chamado in self.chamados if not chamado.finalizado]
        self.historico.append(list(self.chamados))

    def listar_por_prioridade(self):
        return sorted(self.chamados, key=lambda c: c.prioridade, reverse=True)

    def exibir_estatisticas(self):
        total = len(self.chamados)
        finalizados = sum(1 for c in self.chamados if c.finalizado)
        return {"Total": total, "Finalizados": finalizados, "Abertos": total - finalizados}

    def reverter_ultima_acao(self):
        if len(self.historico) > 1:
            self.historico.pop()
            self.chamados = list(self.historico[-1])

    def limpar_lista(self):
        self.chamados.clear()
        self.historico.append([])

def main():
    sistema = SistemaChamados()
    sistema.cadastrar_chamado(1, "Erro no sistema X", 2)
    sistema.cadastrar_chamado(2, "Atualizar software", 1)
    sistema.cadastrar_chamado(3, "Falha na rede", 3)
    
    print("Chamados cadastrados:")
    print(sistema.listar_por_prioridade())
    
    print("\nBuscando chamado por descrição:")
    print(sistema.buscar_chamado("Erro"))
    
    sistema.chamados[0].finalizado = True
    sistema.remover_finalizados()
    print("\nApós remover chamados finalizados:")
    print(sistema.listar_por_prioridade())
    
    print("\nEstatísticas:")
    print(sistema.exibir_estatisticas())
    
    sistema.reverter_ultima_acao()
    print("\nApós reverter a última ação:")
    print(sistema.listar_por_prioridade())

if __name__ == "__main__":
    main()

